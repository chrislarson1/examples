apiVersion: redskyops.dev/v1beta1
kind: Experiment
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
    redskyops.dev/scenario: standard
  name: votingapp-sf-standard
  namespace: test
spec:
  metrics:
  - minimize: true
    name: cost
    port: 9090
    query: ({{ cpuRequests . "" }} * 17) + ({{ memoryRequests . "" | GB }} * 3)
    type: prometheus
  - minimize: true
    name: cost-cpu-requests
    optimize: false
    port: 9090
    query: '{{ cpuRequests . "" }}'
    type: prometheus
  - minimize: true
    name: cost-memory-requests
    optimize: false
    port: 9090
    query: '{{ memoryRequests . "" | GB }}'
    type: prometheus
  - minimize: true
    name: p50-latency
    optimize: false
    port: 9090
    query: scalar(median{job="trialRun",instance="{{ .Trial.Name }}"})
    type: prometheus
  - minimize: true
    name: p95-latency
    port: 9090
    query: scalar(percentile_95{job="trialRun",instance="{{ .Trial.Name }}"})
    type: prometheus
  - minimize: true
    name: p99-latency
    optimize: false
    port: 9090
    query: scalar(percentile_99{job="trialRun",instance="{{ .Trial.Name }}"})
    type: prometheus
  parameters:
  - baseline: 2098
    max: 4096
    min: 128
    name: memory
  - baseline: 1000
    max: 4000
    min: 100
    name: cpu
  - baseline: 3
    max: 5
    min: 1
    name: replicas
  patches:
  - patch: |
      spec:
        replicas: {{ .Values.replicas }}
        template:
          spec:
            containers:
            - name: voting-service
              resources:
                limits:
                  memory: '{{ .Values.memory }}M'
                  cpu: '{{ .Values.cpu }}m'
                requests:
                  memory: '{{ .Values.memory }}M'
                  cpu: '{{ .Values.cpu }}m'
    targetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: voting-service
  trialTemplate:
    metadata:
      labels:
        redskyops.dev/application: votingapp-sf
        redskyops.dev/scenario: standard
    spec:
      jobTemplate:
        metadata:
          labels:
            redskyops.dev/application: votingapp-sf
            redskyops.dev/scenario: standard
        spec:
          template:
            metadata:
              labels:
                redskyops.dev/application: votingapp-sf
                redskyops.dev/scenario: standard
            spec:
              containers:
              - env:
                - name: TITLE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: TEST_CASE
                  value: sf_sandbox/votingapp-sf-standard
                - name: TEST_CASE_FILE
                  value: /forge-init.d/testcase.js
                - name: TARGET
                  value: http://35.244.198.192
                - name: STORMFORGER_JWT
                  valueFrom:
                    secretKeyRef:
                      key: accessToken
                      name: stormforger-service-account
                image: thestormforge/optimize-trials:v0.0.1-stormforger
                name: stormforger
                resources: {}
                volumeMounts:
                - mountPath: /forge-init.d
                  name: test-case-file
                  readOnly: true
              volumes:
              - configMap:
                  name: standard-test-case-file
                name: test-case-file
      setupServiceAccountName: redsky-setup
      setupTasks:
      - args:
        - prometheus
        - $(MODE)
        name: monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
  name: redsky-setup
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
  name: redsky-prometheus
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  - configmaps
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - nodes/proxy
  - services
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
  name: redsky-setup-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redsky-prometheus
subjects:
- kind: ServiceAccount
  name: redsky-setup
  namespace: test
---
apiVersion: v1
binaryData:
  testcase.js: ZGVmaW5pdGlvbi5zZXRUYXJnZXQoJHRhcmdldCk7CgpkZWZpbml0aW9uLnNldEFycml2YWxQaGFzZXMoWwogICAgewogICAgICAgIGR1cmF0aW9uOiAzICogNjAsCiAgICAgICAgcmF0ZTogNTAwLAogICAgfSwKXSk7CgpkZWZpbml0aW9uLnNldFRlc3RPcHRpb25zKHsKICAgIGNsdXN0ZXI6IHsKICAgICAgICBzaXppbmc6ICJzbWFsbCIsCiAgICAgICAgcmVnaW9uOiAidXMtZWFzdC0xIgogICAgfSwKfSk7CgpkZWZpbml0aW9uLnNlc3Npb24oInZvdGUiLCBmdW5jdGlvbiAoc2Vzc2lvbikgewoKICAgIHNlc3Npb24ucG9zdCgiLyIsIHsKICAgICAgICBwYXlsb2FkOiB7CiAgICAgICAgICAgIHZvdGU6ICJhIiwKICAgICAgICB9CiAgICB9KTsKCn0pOwo=
kind: ConfigMap
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
  name: standard-test-case-file
  namespace: test
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    redskyops.dev/application: votingapp-sf
  name: stormforger-service-account
  namespace: test
stringData:
  accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzZjp1c2VyOnRwZXJvbCIsImV4cCI6MTYyMjA0NzYzMCwianRpIjoiSldQSFR4TTF1a3FfSkNMQm5TZkwifQ.mLnQrass5-mRWAV5Q5az9-113H3NeM6C1HWzIIjT8e0
type: Opaque
---
